{"version":3,"sources":["../../../../src/app/typescripts/free/carousel/carousel.component.ts"],"names":[],"mappings":"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","file":"carousel.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, OnDestroy, Output, EventEmitter, ElementRef, HostListener, trigger, state, style, transition, animate,\r\n  keyframes } from '@angular/core';\r\n\r\n  import { isBs3, LinkedList } from '../utils';\r\n  import { SlideComponent } from './slide.component';\r\n  import { CarouselConfig } from './carousel.config';\r\n\r\n  export enum Direction {UNKNOWN, NEXT, PREV}\r\n\r\n/**\r\n* Base element to create carousel\r\n*/\r\n\r\n\r\nexport class CarouselComponent implements OnDestroy {\r\n  protected _slides: LinkedList<SlideComponent> = new LinkedList<SlideComponent>();\r\n  public get slides(): SlideComponent[] {\r\n    return this._slides.toArray();\r\n  }\r\n\r\n  protected currentInterval: any;\r\n  protected isPlaying: boolean;\r\n  protected destroyed = false;\r\n  protected el: ElementRef = null;\r\n  protected animationEnd = true;\r\n\r\n  /** If `true` — carousel will not cycle continuously and will have hard stops (prevent looping) */\r\n   public noWrap: boolean;\r\n  /**  If `true` — will disable pausing on carousel mouse hover */\r\n   public noPause: boolean;\r\n\r\n   public keyboard: boolean;\r\n\r\n   public class: String = '';\r\n   public type: String = '';\r\n   public animation: String = '';\r\n\r\n\r\n  protected _currentActiveSlide: number;\r\n\r\n  /** Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property */\r\n   public activeSlideChange: EventEmitter <any> = new EventEmitter<any>(false);\r\n\r\n  /** Index of currently displayed slide(started for 0) */\r\n  \r\n  public set activeSlide(index: number) {\r\n    if (this._slides.length && index !== this._currentActiveSlide) {\r\n      this._select(index);\r\n    }\r\n  }\r\n  public get activeSlide(): number {\r\n    return this._currentActiveSlide;\r\n  }\r\n\r\n  protected _interval: number;\r\n\r\n  public checkNavigation() {\r\n    if (this.type === 'carousel-multi-item') {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n\r\n  public checkDots() {\r\n    if (this.type === 'carousel-thumbnails') {\r\n      return false;\r\n    }\r\n\r\n\r\n    return true;\r\n  }\r\n\r\n  getImg(slide: any) {\r\n    return slide.el.nativeElement.querySelector('img').src;\r\n  }\r\n\r\n  /**\r\n   * Delay of item cycling in milliseconds. If false, carousel won't cycle automatically.\r\n   */\r\n   \r\n   public get interval(): number {\r\n     return this._interval;\r\n   }\r\n   public set interval(value: number) {\r\n     this._interval = value;\r\n     this.restartTimer();\r\n   }\r\n\r\n   public get isBs4(): boolean {\r\n     return !isBs3();\r\n   }\r\n\r\n   public constructor(config: CarouselConfig, el: ElementRef) {\r\n     Object.assign(this, config);\r\n     this.el = el;\r\n   }\r\n\r\n   public ngOnDestroy(): void {\r\n     this.destroyed = true;\r\n   }\r\n\r\n  /**\r\n   * Adds new slide. If this slide is first in collection - set it as active and starts auto changing\r\n   * @param slide\r\n   */\r\n   public addSlide(slide: SlideComponent): void {\r\n     this._slides.add(slide);\r\n     if (this._slides.length === 1) {\r\n       this._currentActiveSlide = void 0;\r\n       this.activeSlide = 0;\r\n       this.play();\r\n     }\r\n   }\r\n\r\n  /**\r\n   * Removes specified slide. If this slide is active - will roll to another slide\r\n   * @param slide\r\n   */\r\n   public removeSlide(slide: SlideComponent): void {\r\n     const remIndex = this._slides.indexOf(slide);\r\n\r\n     if (this._currentActiveSlide === remIndex) {\r\n\r\n       // removing of active slide\r\n       let nextSlideIndex: number = void 0;\r\n       if (this._slides.length > 1) {\r\n         // if this slide last - will roll to first slide, if noWrap flag is FALSE or to previous, if noWrap is TRUE\r\n         // in case, if this slide in middle of collection, index of next slide is same to removed\r\n         nextSlideIndex = !this.isLast(remIndex) ? remIndex :\r\n         this.noWrap ? remIndex - 1 : 0;\r\n       }\r\n       this._slides.remove(remIndex);\r\n\r\n       // prevents exception with changing some value after checking\r\n       setTimeout(() => {\r\n         this._select(nextSlideIndex);\r\n       }, 0);\r\n     } else {\r\n       this._slides.remove(remIndex);\r\n       const currentSlideIndex = this.getCurrentSlideIndex();\r\n       setTimeout(() => {\r\n         // after removing, need to actualize index of current active slide\r\n         this._currentActiveSlide = currentSlideIndex;\r\n         this.activeSlideChange.emit(this._currentActiveSlide);\r\n       }, 0);\r\n\r\n     }\r\n   }\r\n\r\n  /**\r\n   * Rolling to next slide\r\n   * @param force: {boolean} if true - will ignore noWrap flag\r\n   */\r\n   public nextSlide(force: boolean = false) {\r\n     if (this.animation === 'slide') {\r\n       this.pause();\r\n       const direction = Direction.NEXT;\r\n       this.slideAnimation(this.findNextSlideIndex(direction, force), direction);\r\n     } else if (this.animation === 'fade') {\r\n       this.pause();\r\n       this.fadeAnimation(this.findNextSlideIndex(Direction.NEXT, force));\r\n     } else {\r\n       this.activeSlide = this.findNextSlideIndex(Direction.NEXT, force);\r\n     }\r\n\r\n   }\r\n\r\n  /**\r\n   * Rolling to previous slide\r\n   * @param force: {boolean} if true - will ignore noWrap flag\r\n   */\r\n   public previousSlide(force: boolean = false): void {\r\n     if (this.animation === 'slide') {\r\n       this.pause();\r\n       const direction = Direction.PREV;\r\n       this.slideAnimation(this.findNextSlideIndex(direction, force), direction);\r\n     } else if (this.animation === 'fade') {\r\n       this.pause();\r\n       this.fadeAnimation(this.findNextSlideIndex(Direction.PREV, force));\r\n     } else {\r\n       this.activeSlide = this.findNextSlideIndex(Direction.PREV, force);\r\n     }\r\n   }\r\n\r\n   protected fadeAnimation(goToIndex: number) {\r\n     const currentSlide = this._slides.get(this._currentActiveSlide);\r\n     const goToSlide = this._slides.get(goToIndex);\r\n\r\n     if (this.animationEnd) {\r\n       this.animationEnd = false;\r\n\r\n       goToSlide.directionNext = true;\r\n\r\n       setTimeout(() => {\r\n         goToSlide.directionNext = false;\r\n         this.animationEnd = true;\r\n\r\n         this.activeSlide = goToIndex;\r\n\r\n         this.play();\r\n       }, 100);\r\n     }\r\n   }\r\n\r\n   protected slideAnimation(goToIndex: number, direction: any) {\r\n\r\n     const currentSlide = this._slides.get(this._currentActiveSlide);\r\n     const goToSlide = this._slides.get(goToIndex);\r\n\r\n     if (this.animationEnd) {\r\n       if (direction === Direction.NEXT) {\r\n         this.animationEnd = false;\r\n         goToSlide.directionNext = true;\r\n         setTimeout(() => {\r\n           goToSlide.directionLeft = true;\r\n           currentSlide.directionLeft = true;\r\n         }, 100);\r\n       }\r\n\r\n       if (direction === Direction.PREV) {\r\n         this.animationEnd = false;\r\n\r\n         goToSlide.directionPrev = true;\r\n         setTimeout(() => {\r\n           goToSlide.directionRight = true;\r\n           currentSlide.directionRight = true;\r\n         }, 100);\r\n       }\r\n\r\n       setTimeout(() => {\r\n         goToSlide.directionLeft = false;\r\n         goToSlide.directionNext = false;\r\n         currentSlide.directionLeft = false;\r\n         currentSlide.directionNext = false;\r\n         goToSlide.directionRight = false;\r\n         goToSlide.directionPrev = false;\r\n         currentSlide.directionRight = false;\r\n         currentSlide.directionPrev = false;\r\n\r\n         this.animationEnd = true;\r\n\r\n         this.activeSlide = goToIndex;\r\n\r\n         let directionName;\r\n         if (direction === Direction.NEXT) {\r\n           directionName = 'Next';\r\n         } else if (direction === Direction.PREV) {\r\n           directionName = 'Prev';\r\n         }\r\n\r\n         this.activeSlideChange.emit({'direction': directionName, 'relatedTarget': this.activeSlide});\r\n         this.play();\r\n       }, 700);\r\n     }\r\n   }\r\n\r\n\r\n\r\n  /**\r\n   * Rolling to specified slide\r\n   * @param index: {number} index of slide, which must be shown\r\n   */\r\n   public selectSlide(index: number): void {\r\n     this.pause();\r\n     if (this.animation === 'slide') {\r\n\r\n       if (this.activeSlide < index) {\r\n         this.slideAnimation(index, Direction.NEXT);\r\n       } else if (this.activeSlide > index) {\r\n         this.slideAnimation(index, Direction.PREV);\r\n       }\r\n     } else if (this.animation === 'fade') {\r\n       if (index !== this.activeSlide) {\r\n         this.fadeAnimation(index);\r\n       }\r\n     }\r\n     this.play();\r\n   }\r\n\r\n  /**\r\n   * Starts a auto changing of slides\r\n   */\r\n    play() {\r\n     if (!this.isPlaying) {\r\n       this.isPlaying = true;\r\n       this.restartTimer();\r\n     }\r\n   }\r\n\r\n  /**\r\n   * Stops a auto changing of slides\r\n   */\r\n    pause() {\r\n     if (!this.noPause) {\r\n       this.isPlaying = false;\r\n       this.resetTimer();\r\n     }\r\n   }\r\n\r\n  /**\r\n   * Finds and returns index of currently displayed slide\r\n   * @returns {number}\r\n   */\r\n   public getCurrentSlideIndex(): number {\r\n     return this._slides.findIndex((slide: SlideComponent) => slide.active);\r\n   }\r\n\r\n  /**\r\n   * Defines, whether the specified index is last in collection\r\n   * @param index\r\n   * @returns {boolean}\r\n   */\r\n   public isLast(index: number): boolean {\r\n     return index + 1 >= this._slides.length;\r\n   }\r\n\r\n  /**\r\n   * Defines next slide index, depending of direction\r\n   * @param direction: Direction(UNKNOWN|PREV|NEXT)\r\n   * @param force: {boolean} if TRUE - will ignore noWrap flag, else will return undefined if next slide require wrapping\r\n   * @returns {any}\r\n   */\r\n   private findNextSlideIndex(direction: Direction, force: boolean): any {\r\n     let nextSlideIndex = 0;\r\n\r\n     if (!force && (this.isLast(this.activeSlide) && direction !== Direction.PREV && this.noWrap)) {\r\n       return void 0;\r\n     }\r\n\r\n     switch (direction) {\r\n       case Direction.NEXT:\r\n       // if this is last slide, not force, looping is disabled and need to going forward - select current slide, as a next\r\n       nextSlideIndex = (!this.isLast(this._currentActiveSlide)) ? this._currentActiveSlide + 1 :\r\n       (!force && this.noWrap ) ? this._currentActiveSlide : 0;\r\n       break;\r\n       case Direction.PREV:\r\n       // if this is first slide, not force, looping is disabled and need to going backward - select current slide, as a next\r\n       nextSlideIndex = (this._currentActiveSlide > 0) ? this._currentActiveSlide - 1 :\r\n       (!force && this.noWrap ) ? this._currentActiveSlide : this._slides.length - 1;\r\n       break;\r\n       default:\r\n       throw new Error('Unknown direction');\r\n     }\r\n     return nextSlideIndex;\r\n   }\r\n\r\n  /**\r\n   * Sets a slide, which specified through index, as active\r\n   * @param index\r\n   * @private\r\n   */\r\n   private _select(index: number): void {\r\n     if (isNaN(index)) {\r\n       this.pause();\r\n       return;\r\n     }\r\n     const currentSlide = this._slides.get(this._currentActiveSlide);\r\n     if (currentSlide) {\r\n       currentSlide.active = false;\r\n     }\r\n     const nextSlide = this._slides.get(index);\r\n     if (nextSlide) {\r\n       this._currentActiveSlide = index;\r\n       nextSlide.active = true;\r\n       this.activeSlide = index;\r\n       // this.activeSlideChange.emit(index);\r\n     }\r\n   }\r\n\r\n  /**\r\n   * Starts loop of auto changing of slides\r\n   */\r\n   private restartTimer(): any {\r\n     this.resetTimer();\r\n     const interval = +this.interval;\r\n     if (!isNaN(interval) && interval > 0) {\r\n       this.currentInterval = setInterval(\r\n         () => {\r\n           const nInterval = +this.interval;\r\n           if (this.isPlaying && !isNaN(this.interval) && nInterval > 0 && this.slides.length) {\r\n             this.nextSlide();\r\n           } else {\r\n             this.pause();\r\n           }\r\n         },\r\n         interval);\r\n     }\r\n   }\r\n\r\n  /**\r\n   * Stops loop of auto changing of slides\r\n   */\r\n   private resetTimer(): void {\r\n     if (this.currentInterval) {\r\n       clearInterval(this.currentInterval);\r\n       this.currentInterval = void 0;\r\n     }\r\n   }\r\n\r\n   protected hasClass(el: any, className: any) {\r\n     if (el.classList) {\r\n       return el.classList.contains(className);\r\n     } else {\r\n       return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\r\n     }\r\n   }\r\n\r\n   protected classAdd(el: any, className: any) {\r\n     if (el.classList) {\r\n       el.classList.add(className);\r\n     } else if (!this.hasClass(el, className)) {\r\n       el.className += ' ' + className;\r\n     }\r\n   }\r\n\r\n   protected removeClass(el: any, className: any) {\r\n     if (el.classList) {\r\n       el.classList.remove(className);\r\n     } else if (this.hasClass(el, className)) {\r\n       const reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\r\n       el.className = el.className.replace(reg, ' ');\r\n     }\r\n   }\r\n\r\n    keyboardControl(event: KeyboardEvent) {\r\n     if (this.keyboard) {\r\n       if (event.keyCode === 39) {\r\n         this.nextSlide();\r\n       }\r\n\r\n       if (event.keyCode === 37) {\r\n         this.previousSlide();\r\n       }\r\n     }\r\n\r\n   }\r\n    focus() {\r\n     this.el.nativeElement.focus();\r\n   }\r\n\r\n static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mdb-carousel',\r\n  template: `\r\n  <div tabindex=\"0\" (mouseenter)=\"pause()\" (mouseleave)=\"play()\" (mouseup)=\"play()\" class=\"carousel {{ class }} {{ type }}\">\r\n    <div class=\"controls-top\" *ngIf=\"slides.length > 1 && !checkNavigation()\">\r\n      <a class=\"btn-floating\" [class.disabled]=\"activeSlide===0&&noWrap\" (click)=\"previousSlide()\"><i class=\"fa fa-chevron-left\"></i></a>\r\n      <a class=\"btn-floating\" (click)=\"nextSlide()\" [class.disabled]=\"isLast(activeSlide) && noWrap\"><i class=\"fa fa-chevron-right\"></i></a>\r\n    </div>\r\n    <ol class=\"carousel-indicators\" *ngIf=\"slides.length > 1 && checkDots()\">\r\n     <li *ngFor=\"let slidez of slides; let i = index;\" [class.active]=\"slidez.active === true\" (click)=\"selectSlide(i)\"></li>\r\n    </ol>\r\n    <ol class=\"carousel-indicators\" *ngIf=\"slides.length > 1 && !checkDots()\">\r\n     <li *ngFor=\"let slidez of slides; let i = index;\" [class.active]=\"slidez.active === true\" (click)=\"selectSlide(i)\">\r\n      <img class=\"img-fluid\" src=\"{{ getImg(slidez) }}\">\r\n     </li>\r\n    </ol>\r\n    <div class=\"carousel-inner\"><ng-content></ng-content></div>\r\n    <a class=\"carousel-control-prev\" \r\n    [class.disabled]=\"activeSlide === 0 && noWrap\" (click)=\"previousSlide()\" *ngIf=\"slides.length > 1 && checkNavigation()\">\r\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n    <span  class=\"sr-only\">Previous</span>\r\n    </a>\r\n    <a class=\"carousel-control-next\" (click)=\"nextSlide()\" \r\n    [class.disabled]=\"isLast(activeSlide) && noWrap\" *ngIf=\"slides.length > 1 && checkNavigation()\">\r\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n    <span class=\"sr-only\">Next</span>\r\n    </a>\r\n  </div>`\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CarouselConfig, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'noWrap': [{ type: Input },],\n'noPause': [{ type: Input },],\n'keyboard': [{ type: Input },],\n'class': [{ type: Input, args: ['class', ] },],\n'type': [{ type: Input, args: ['type', ] },],\n'animation': [{ type: Input, args: ['animation', ] },],\n'activeSlideChange': [{ type: Output },],\n'activeSlide': [{ type: Input },],\n'interval': [{ type: Input },],\n'play': [{ type: HostListener, args: ['mouseleave', ] },],\n'pause': [{ type: HostListener, args: ['mouseenter', ] },],\n'keyboardControl': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n'focus': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}