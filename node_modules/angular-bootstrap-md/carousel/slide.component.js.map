{"version":3,"sources":["../../../../src/app/typescripts/free/carousel/slide.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,WAAA,EAAwB,KAAA,EAAe,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE7F,OAAO,EAAE,iBAAA,EAAkB,MAAO,sBAAA,CAAuB;AAGzD;IAkBE,wBAAmB,QAA2B,EAAE,EAAc;QAb7D,aAAQ,GAAG,KAAK,CAAC;QACjB,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,KAAK,CAAC;QACtB,kBAAa,GAAG,KAAK,CAAC;QACtB,mBAAc,GAAG,KAAK,CAAC;QAOjB,OAAE,GAAe,IAAI,CAAC;QAG3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IAED,8EAA8E;IACvE,iCAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,kFAAkF;IAC3E,oCAAW,GAAlB;QACE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAuBH,qBAAC;AAAD,CAtDA,AAsDC;;AAtBM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,mCAET;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;IAC3B,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,EAH6F,CAG7F,CAAC;AACK,6BAAc,GAA2C;IAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,cAAc,EAAG,EAAE,EAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5E,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,gBAAgB,EAAG,EAAE,EAAE;IAChE,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,0BAA0B,EAAG,EAAE,EAAE;IAC/E,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,0BAA0B,EAAG,EAAE,EAAE;IAC/E,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,0BAA0B,EAAG,EAAE,EAAE;IAC/E,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,2BAA2B,EAAG,EAAE,EAAE;IACjF,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,qBAAqB,EAAG,EAAE,EAAE;CACpE,CAAC","file":"slide.component.js","sourceRoot":"","sourcesContent":["import { Component, HostBinding, OnDestroy, Input, OnInit, ElementRef } from '@angular/core';\r\n\r\nimport { CarouselComponent } from './carousel.component';\r\n\r\n\r\nexport class SlideComponent implements OnInit, OnDestroy {\r\n\r\n  /** Is current slide active */\r\n  \r\n   public active: boolean;\r\n   animated = false;\r\n   directionNext = false;\r\n   directionLeft = false;\r\n   directionPrev = false;\r\n   directionRight = false;\r\n  /** Wraps element by appropriate CSS classes */\r\n  \r\n\r\n\r\n  /** Link to Parent(container-collection) component */\r\n  protected carousel: CarouselComponent;\r\n  public el: ElementRef = null;\r\n\r\n  public constructor(carousel: CarouselComponent, el: ElementRef) {\r\n    this.carousel = carousel;\r\n    this.el = el;\r\n  }\r\n\r\n  /** Fires changes in container collection after adding a new slide instance */\r\n  public ngOnInit(): void {\r\n    this.carousel.addSlide(this);\r\n  }\r\n\r\n  /** Fires changes in container collection after removing of this slide instance */\r\n  public ngOnDestroy(): void {\r\n    this.carousel.removeSlide(this);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mdb-slide',\r\n  template: `\r\n  <ng-content></ng-content>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CarouselComponent, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: HostBinding, args: ['class.active', ] },{ type: Input },],\n'animated': [{ type: HostBinding, args: ['class.animated', ] },],\n'directionNext': [{ type: HostBinding, args: ['class.carousel-item-next', ] },],\n'directionLeft': [{ type: HostBinding, args: ['class.carousel-item-left', ] },],\n'directionPrev': [{ type: HostBinding, args: ['class.carousel-item-prev', ] },],\n'directionRight': [{ type: HostBinding, args: ['class.carousel-item-right', ] },],\n'carousel': [{ type: HostBinding, args: ['class.carousel-item', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}