{"version":3,"sources":["../../../../src/app/typescripts/free/dropdown/dropdown-toggle.directive.ts"],"names":[],"mappings":"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","file":"dropdown-toggle.directive.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, HostBinding, HostListener, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { BsDropdownState } from './dropdown.state';\r\n\r\n\r\nexport class BsDropdownToggleDirective implements OnDestroy {\r\n  private _subscriptions: Subscription[] = [];\r\n\r\n   ariaHaspopup = true;\r\n   isDisabled: boolean = null;\r\n\r\n  // @HostBinding('class.active')\r\n   isOpen: boolean;\r\n\r\n  \r\n  onClick(): void {\r\n    if (this.isDisabled) {\r\n      return;\r\n    }\r\n    this._state.toggleClick.emit();\r\n  }\r\n\r\n  \r\n  onDocumentClick(event: any): void {\r\n    if (this._state.autoClose && event.button !== 2 &&\r\n      !this._element.nativeElement.contains(event.target)) {\r\n      this._state.toggleClick.emit(false);\r\n  }\r\n}\r\n\r\n\r\nonEsc(): void {\r\n  if (this._state.autoClose) {\r\n    this._state.toggleClick.emit(false);\r\n  }\r\n}\r\n\r\nconstructor(private _state: BsDropdownState,\r\n  private _element: ElementRef) {\r\n  // sync is open value with state\r\n  this._subscriptions.push(this._state\r\n    .isOpenChange.subscribe((value: boolean) => this.isOpen = value));\r\n  // populate disabled state\r\n  this._subscriptions.push(this._state\r\n    .isDisabledChange\r\n    .subscribe((value: boolean) => this.isDisabled = value || null));\r\n}\r\n\r\nngOnDestroy(): void {\r\n  for (const sub of this._subscriptions) {\r\n    sub.unsubscribe();\r\n  }\r\n}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[mdbDropdownToggle],[dropdownToggle]',\r\n  exportAs: 'bs-dropdown-toggle'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BsDropdownState, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ariaHaspopup': [{ type: HostBinding, args: ['attr.aria-haspopup', ] },],\n'isDisabled': [{ type: HostBinding, args: ['attr.disabled', ] },],\n'isOpen': [{ type: HostBinding, args: ['attr.aria-expanded', ] },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n'onDocumentClick': [{ type: HostListener, args: ['document:click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['keyup.esc', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}