{"version":3,"sources":["../../../../src/app/typescripts/free/modals/modalBackdrop.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAoB,QAAA,EAAU,WAAA,EAAmB,MAAO,eAAA,CAAgB;AAE5F,OAAO,EAAE,SAAA,EAAU,MAAO,iBAAA,CAAkB;AAC5C,OAAO,EAAE,KAAA,EAAM,MAAO,+BAAA,CAAgC;AACtD,OAAO,EAAE,KAAA,EAAM,MAAO,sBAAA,CAAuB;AAE7C;IAGE,8BAAmB,OAA6B;QAFzC,YAAO,GAAG,IAAI,CAAC;QAGpB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IACH,2BAAC;AAAD,CANA,AAMC,IAAA;;AAED,8EAA8E;AAE9E;IA6BE,gCAAmB,OAAmB,EAAE,QAAkB;QA5BlD,sBAAiB,GAAG,IAAI,CAAC;QA0BvB,aAAQ,GAAG,KAAK,CAAC;QAGzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IA7BD,sBAAW,8CAAU;aAArB;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAsB,KAAc;YAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAJA;IAMD,sBAAW,2CAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAmB,KAAc;YAC/B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,EAAI,EAAE,KAAK,CAAC,CAAC;YACpF,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,IAAM,EAAE,KAAK,CAAC,CAAC;YACxF,CAAC;QACH,CAAC;;;OARA;IAqBD,yCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,KAAG,SAAS,CAAC,IAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAChG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAeH,6BAAC;AAAD,CAvDA,AAuDC;;AAdM,iCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,oBAAoB;gBAC9B,QAAQ,EAAE,EAAE;aACb,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,qCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,EAH6F,CAG7F,CAAC;AACK,qCAAc,GAA2C;IAChE,mBAAmB,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,sBAAsB,EAAG,EAAE,EAAE;CAC9E,CAAC","file":"modalBackdrop.component.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, OnInit, Renderer, HostBinding, Input } from '@angular/core';\r\n\r\nimport { ClassName } from './modal.options';\r\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\r\nimport { Utils } from '../utils/utils.class';\r\n\r\nexport class ModalBackdropOptions {\r\n  public animate = true;\r\n\r\n  public constructor(options: ModalBackdropOptions) {\r\n    Object.assign(this, options);\r\n  }\r\n}\r\n\r\n/** This component will be added as background layout for modals if enabled */\r\n\r\nexport class ModalBackdropComponent implements OnInit {\r\n   public classNameBackDrop = true;\r\n\r\n  public get isAnimated(): boolean {\r\n    return this._isAnimated;\r\n  }\r\n\r\n  public set isAnimated(value: boolean) {\r\n    this._isAnimated = value;\r\n  }\r\n\r\n  public get isShown(): boolean {\r\n    return this._isShown;\r\n  }\r\n\r\n  public set isShown(value: boolean) {\r\n    this._isShown = value;\r\n    this.renderer.setElementClass(this.element.nativeElement, `${ClassName.IN}`, value);\r\n    if (!isBs3()) {\r\n      this.renderer.setElementClass(this.element.nativeElement, `${ClassName.SHOW}`, value);\r\n    }\r\n  }\r\n\r\n  public element: ElementRef;\r\n  public renderer: Renderer;\r\n\r\n  protected _isAnimated: boolean;\r\n  protected _isShown = false;\r\n\r\n  public constructor(element: ElementRef, renderer: Renderer) {\r\n    this.element = element;\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isAnimated) {\r\n      this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, this.isAnimated);\r\n      Utils.reflow(this.element.nativeElement);\r\n    }\r\n    this.isShown = true;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mdb-modal-backdrop',\r\n  template: ``,\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'classNameBackDrop': [{ type: HostBinding, args: ['class.modal-backdrop', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}