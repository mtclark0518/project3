{"version":3,"sources":["../../../../src/app/typescripts/free/modals/modal.options.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAG3C;IAAA;IAiCA,CAAC;IAAD,mBAAC;AAAD,CAjCA,AAiCC;;AANO,uBAAU,GAA0B;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAID;IAAA;IAeD,CAAC;IAVC;;OAEG;IACF,0BAAI,GAAJ,cAAc,CAAC;IAOlB,kBAAC;AAAD,CAfC,AAeA;;AANO,sBAAU,GAA0B;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAGD,MAAM,CAZC,IAAM,mBAAA,GAAoC;IAa/C,QAAQ,EAZE,IAAA;IAaV,QAAQ,EAZE,IAAA;IAaV,KAAK,EAZE,IAAA;IAaP,IAAI,EAZE,KAAA;IAaN,mBAAmB,EAZE,KAAA;IAarB,KAAK,EAZE,EAAA;IAaP,QAAQ,EAZE,IAAA;CAaX,CAZC;AAcF,MAAM,CAZC,IAAM,SAAA,GAAiB;IAa5B,kBAAkB,EAZE,yBAAA;IAapB,QAAQ,EAZE,gBAAA;IAaV,IAAI,EAZE,YAAA;IAaN,IAAI,EAZE,MAAA;IAaN,EAAE,EAZE,IAAA;IAaJ,IAAI,EAZE,MAAA,CAAO,MAAA;CAad,CAZC;AAcF,MAAM,CAZC,IAAM,QAAA,GAAgB;IAa3B,MAAM,EAZE,eAAA;IAaR,WAAW,EAZE,uBAAA;IAab,YAAY,EAZE,wBAAA;IAad,aAAa,EAZE,oDAAA;CAahB,CAZC;AAcF,MAAM,CAZC,IAAM,mBAAA,GAA2B;IAatC,KAAK,EAZE,GAAA;IAaP,QAAQ,EAZE,GAAA;CAaX,CAZC;AAcF,MAAM,CAZC,IAAM,eAAA,GAAkB;IAa7B,QAAQ,EAZE,gBAAA;IAaV,GAAG,EAZE,KAAA;CAaN,CAZC","file":"modal.options.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n\r\nexport class ModalOptions {\r\n  /**\r\n   *  Includes a modal-backdrop element. Alternatively, specify static for a backdrop which doesn't close the modal on click.\r\n   */\r\n   backdrop?: boolean | 'static';\r\n  /**\r\n   * Closes the modal when escape key is pressed.\r\n   */\r\n   keyboard?: boolean;\r\n\r\n   focus?: boolean;\r\n  /**\r\n   * Shows the modal when initialized.\r\n   */\r\n   show?: boolean;\r\n  /**\r\n   * Ignore the backdrop click\r\n   */\r\n   ignoreBackdropClick?: boolean;\r\n  /**\r\n   * Css class for opened modal\r\n   */\r\n   class?: string;\r\n  /**\r\n   * Toggle animation\r\n   */\r\n   animated?: boolean;\r\n static decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\r\n \r\n export class MDBModalRef {\r\n  /**\r\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\r\n   */\r\n   content?: any | null;\r\n  /**\r\n   * Hides the modal\r\n   */\r\n   hide(): void {}\r\n static decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\r\n export const modalConfigDefaults: ModalOptions = {\r\n   backdrop: true,\r\n   keyboard: true,\r\n   focus: true,\r\n   show: false,\r\n   ignoreBackdropClick: false,\r\n   class: '',\r\n   animated: true\r\n };\r\n\r\n export const ClassName: any = {\r\n   SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\r\n   BACKDROP: 'modal-backdrop',\r\n   OPEN: 'modal-open',\r\n   FADE: 'fade',\r\n   IN: 'in',     // bs3\r\n   SHOW: 'show'  // bs4\r\n };\r\n\r\n export const Selector: any = {\r\n   DIALOG: '.modal-dialog',\r\n   DATA_TOGGLE: '[data-toggle=\"modal\"]',\r\n   DATA_DISMISS: '[data-dismiss=\"modal\"]',\r\n   FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\r\n };\r\n\r\n export const TransitionDurations: any = {\r\n   MODAL: 300,\r\n   BACKDROP: 150\r\n };\r\n\r\n export const DISMISS_REASONS = {\r\n   BACKRDOP: 'backdrop-click',\r\n   ESC: 'esc'\r\n };\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}