{"version":3,"sources":["../../../../src/app/typescripts/free/modals/modalContainer.component.ts"],"names":[],"mappings":"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","file":"modalContainer.component.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, HostListener, OnDestroy, OnInit, Renderer, HostBinding } from '@angular/core';\r\nimport { ClassName, DISMISS_REASONS, ModalOptions, TransitionDurations } from './modal.options';\r\nimport { MDBModalService } from './modal.service';\r\nimport { isBs3 } from '../utils/ng2-bootstrap-config';\r\n\r\n\r\n\r\nexport class ModalContainerComponent implements OnInit, OnDestroy {\r\n   tabindex = -1;\r\n   role = 'dialog';\r\n   modla = true;\r\n\r\n\r\n  public config: ModalOptions;\r\n  public isShown = false;\r\n  public level: number;\r\n  public isAnimated: boolean;\r\n  protected _element: ElementRef;\r\n  private isModalHiding = false;\r\n  \r\n  public onClick(event: any): void {\r\n    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this._element.nativeElement) {\r\n      return;\r\n    }\r\n    this.mdbModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\r\n    this.hide();\r\n  }\r\n  \r\n  public onEsc(): void {\r\n    if (this.config.keyboard && this.level === this.mdbModalService.getModalsCount()) {\r\n      this.mdbModalService.setDismissReason(DISMISS_REASONS.ESC);\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  public constructor(options: ModalOptions, _element: ElementRef, private mdbModalService: MDBModalService, private _renderer: Renderer) {\r\n    this._element = _element;\r\n    this.config = Object.assign({}, options);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isAnimated) {\r\n      this._renderer.setElementClass(this._element.nativeElement, ClassName.FADE, true);\r\n    }\r\n    this._renderer.setElementStyle(this._element.nativeElement, 'display', 'block');\r\n    setTimeout(() => {\r\n      this.isShown = true;\r\n      this._renderer.setElementClass(this._element.nativeElement, isBs3() ? ClassName.IN : ClassName.SHOW, true);\r\n    }, this.isAnimated ? TransitionDurations.BACKDROP : 0);\r\n    if (document && document.body) {\r\n      if (this.mdbModalService.getModalsCount() === 1) {\r\n        this.mdbModalService.checkScrollbar();\r\n        this.mdbModalService.setScrollbar();\r\n      }\r\n      this._renderer.setElementClass(document.body, ClassName.OPEN, true);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  hide(): void {\r\n    if (this.isModalHiding || !this.isShown) {\r\n      return;\r\n    }\r\n    this.isModalHiding = true;\r\n    this._renderer.setElementClass(this._element.nativeElement, isBs3() ? ClassName.IN : ClassName.SHOW, false);\r\n\r\n    setTimeout(() => {\r\n      this.isShown = false;\r\n      if (document && document.body && this.mdbModalService.getModalsCount() === 1) {\r\n        this._renderer.setElementClass(document.body, ClassName.OPEN, false);\r\n      }\r\n      this.mdbModalService.hide(this.level);\r\n      this.isModalHiding = false;\r\n    }, this.isAnimated ? TransitionDurations.MODAL : 0);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'mdb-modal-container',\r\n  template: `\r\n  <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\r\n  <div class=\"modal-content\"><ng-content></ng-content></div>\r\n</div>`\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ModalOptions, },\n{type: ElementRef, },\n{type: MDBModalService, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabindex': [{ type: HostBinding, args: ['tabindex', ] },],\n'role': [{ type: HostBinding, args: ['role', ] },],\n'modla': [{ type: HostBinding, args: ['class.modal', ] },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n'onEsc': [{ type: HostListener, args: ['window:keydown.esc', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}