{"version":3,"sources":["../../../../src/app/typescripts/free/inputs/input-validate.directive.ts"],"names":[],"mappings":"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","file":"input-validate.directive.js","sourceRoot":"","sourcesContent":["import { Directive, Input, ElementRef, Renderer, OnInit, HostListener } from '@angular/core';\r\n\r\n\r\n\r\nexport class InputValidateDirective implements OnInit {\r\n\r\n   public value = '';\r\n  public wrongTextContainer: any;\r\n  public rightTextContainer: any;\r\n\r\n\r\n  constructor( private _elRef: ElementRef, private _renderer: Renderer ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // Inititalise a new <span> wrong/right elements and render it below the host component.\r\n    this.wrongTextContainer = this._renderer.createElement(this._elRef.nativeElement.parentElement, 'span');\r\n    this._renderer.setElementClass(this.wrongTextContainer, 'inputVal', true);\r\n    this._renderer.setElementClass(this.wrongTextContainer, 'text-danger', true);\r\n    this.wrongTextContainer.innerHTML = 'wrong';\r\n    this._renderer.setElementStyle(this.wrongTextContainer, 'visibility', 'hidden');\r\n\r\n    this.rightTextContainer = this._renderer.createElement(this._elRef.nativeElement.parentElement, 'span');\r\n    this._renderer.setElementClass(this.rightTextContainer, 'inputVal', true);\r\n    this._renderer.setElementClass(this.rightTextContainer, 'text-success', true);\r\n    this.rightTextContainer.innerHTML = 'right';\r\n    this._renderer.setElementStyle(this.rightTextContainer, 'visibility', 'hidden');\r\n\r\n  }\r\n\r\n\r\n   onKeyUp() {\r\n\r\n\r\n    const inputType = event.srcElement.attributes['type'].nodeValue;\r\n\r\n\r\n    if ( inputType === 'email' ) {\r\n\r\n      if ( this._elRef.nativeElement.value.length === 0 ) {\r\n        this._renderer.setElementClass(this._elRef.nativeElement, 'counter-danger', false);\r\n        this._renderer.setElementClass(this._elRef.nativeElement, 'counter-success', false);\r\n      } else if ( this._elRef.nativeElement.value.match( /^[a-zA-Z0-9]+@[a-zA-Z0-9]+$/g ) ) {\r\n        this._renderer.setElementClass(this._elRef.nativeElement, 'counter-danger', false);\r\n        this._renderer.setElementClass(this._elRef.nativeElement, 'counter-success', true);\r\n      } else if (! this._elRef.nativeElement.value.match( /^[a-zA-Z0-9]+@[a-zA-Z0-9]+$/g ) ) {\r\n        this._renderer.setElementClass(this._elRef.nativeElement, 'counter-success', false);\r\n        this._renderer.setElementClass(this._elRef.nativeElement, 'counter-danger', true);\r\n      }\r\n\r\n    } else if ( inputType === 'password' ) {\r\n\r\n      if ( this._elRef.nativeElement.value.match( /^[a-zA-Z0-9]+$/g ) ) {\r\n        this._renderer.setElementClass(this._elRef.nativeElement, 'counter-success', true);\r\n      } else if ( this._elRef.nativeElement.value.length === 0 ) {\r\n        this._renderer.setElementClass(this._elRef.nativeElement, 'counter-success', false);\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n  selector: '[mdbInputValidate]',\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'onKeyUp': [{ type: HostListener, args: ['keyup', ['$event'], ] },],\n};\n}\r\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}